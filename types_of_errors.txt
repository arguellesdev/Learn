ZeroDivisionError occurs when you try to divide by zero.
NameError -- in this case, it means that you tried to use the variable a when it was not defined.
IndexError -- in this case, it occured because you tried to access data from a list using an index that does not exist for this list.

Python tries to execute the code in the try block. In this case if there is any exception raised
by the code in the try block, it will be caught and the code block in the except block will be
executed. After that, the code that comes after the try except will be executed.
Example 1       # potential code before try catch
                try:
                    # code to try to execute
                except:
                    # code to execute if there is an exception
                # code that will still execute if there is an exception

Example 2       # potential code before try catch
                try:
                    # code to try to execute
                except (ZeroDivisionError, NameError):
                    # code to execute if there is an exception of the given types
                # code that will execute if there is no exception or a one that we are handling

Example 3       # potential code before try catch
                try:
                    # code to try to execute
                except ZeroDivisionError:
                    # code to execute if there is a ZeroDivisionError
                except NameError:
                    # code to execute if there is a NameError
                except:
                    # code to execute if ther is any exception
                else:
                    # code to execute if there is no exception
                finally:
                    # code to execute at the end of the try except no matter what
                # code that will execute if there is no exception or a one that we are handling

else allows one to check if there was no exception when executing the try block.
This is useful when we want to execute something only if there were no errors.

finally allows us to always execute something even if there is an exception or not.
This is usually used to signify the end of the try except.

                a = 1

                    try:
                        b = int(input("Please enter a number to divide a"))
                        a = a/b
                        print("Success a=",a)
                    except:
                        print("There was an error")
